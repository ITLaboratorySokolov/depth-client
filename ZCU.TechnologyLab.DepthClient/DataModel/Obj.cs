using System.Globalization;
using System.IO;

namespace ObjParser
{
	/// <summary>
	/// Class representing an obj file
	/// </summary>
	public class Obj
	{
		public float[] VertexList;
		public int[] FaceList;
		public float[] TextureList;

		public string UseMtl { get; set; }
		public string Mtl { get; set; }

		/// <summary>
		/// Constructor. Initializes VertexList, FaceList and TextureList.
		/// </summary>
		public Obj(float[] v, int[] f, float[] uv)
		{
			VertexList = v;
			FaceList = f;
			TextureList = uv;

			CultureInfo.CurrentCulture = new CultureInfo("en-US");
		}

		/// <summary>
		/// Write to obj file
		/// </summary>
		/// <param name="path"> Path to file </param>
		/// <param name="headerStrings"> Header </param>
		public void WriteObjFile(string path, string[] headerStrings)
		{
			using (var outStream = File.OpenWrite(path))
			using (var writer = new StreamWriter(outStream))
			{
				// Write some header data
				WriteHeader(writer, headerStrings);

				if (!string.IsNullOrEmpty(Mtl))
				{
					writer.WriteLine("mtllib " + Mtl);
				}

				for (int i = 0; i < VertexList.Length; i += 3)
					writer.WriteLine("v " + VertexList[i] + " " + VertexList[i + 1] + " " + VertexList[i + 2]);

				for (int i = 0; i < TextureList.Length; i += 2)
					writer.WriteLine("vt " + TextureList[i] + " " + TextureList[i + 1]);

				for (int i = 0; i < FaceList.Length; i += 3) {
					if (FaceList[i] != FaceList[i+1] && FaceList[i] != FaceList[i+2] && FaceList[i +1] != FaceList[i+2])
						writer.WriteLine("f " + (FaceList[i]+1) + " " + (FaceList[i + 1]+1) + " " + (FaceList[i + 2]+1));
				}
				writer.Flush();
				writer.Close();
			}
		}

		/// <summary>
		/// Write header to file
		/// </summary>
		/// <param name="writer"> Used writer </param>
		/// <param name="headerStrings"> Header </param>
		private void WriteHeader(StreamWriter writer, string[] headerStrings)
		{
			if (headerStrings == null || headerStrings.Length == 0)
			{
				writer.WriteLine("# Generated by ObjParser");
				return;
			}

			foreach (var line in headerStrings)
			{
				writer.WriteLine("# " + line);
			}
		}

	}
}